// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model Word {
  id        Int      @id @default(autoincrement())
  word      String   @unique 
  langWords Lang_Word[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
  isDeleted Boolean  @default(false)
  @@index([word], name: "word_unique", type: Hash)
}

model Meaning {
  id        Int      @id @default(autoincrement())
  meaning   String
  langWordId Int
  langWord  Lang_Word @relation(fields: [langWordId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
  isDeleted Boolean  @default(false)
}

model Sentence {
  id        Int     @id @default(autoincrement())
  sentence  String 
  langWordId Int
  langWord  Lang_Word @relation(fields: [langWordId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
  isDeleted Boolean  @default(false)
}

model User {
  id        String      @id 
  username  String   @unique
  profile   User_Profile[]
  language User_Language[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
  isDeleted Boolean  @default(false)
}

model User_Profile {
  id        Int      @id @default(autoincrement())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  firstName String
  lastName  String
  iconUrl   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
  isDeleted Boolean  @default(false)
}

model Lang_Word {
  id        Int      @id @default(autoincrement())
  wordId    Int
  word      Word     @relation(fields: [wordId], references: [id])
  userLangId Int
  userLang  User_Language @relation(fields: [userLangId], references: [id])
  meanings  Meaning[]
  sentences Sentence[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
  isDeleted Boolean  @default(false)
}


model User_Language {
  id Int @id @default(autoincrement())
  userId String
  user User @relation(fields: [userId], references: [id])
  languageId Int
  lang Language @relation(fields: [languageId], references: [id])
  langWord  Lang_Word[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
  isDeleted Boolean  @default(false)
}

model Language {
  id Int @id @default(autoincrement())
  lang String
  code String
  userLang User_Language[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
  isDeleted Boolean  @default(false)
}