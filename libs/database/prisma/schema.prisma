// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model Word {
  id        Int      @id @default(autoincrement())
  word      String   @unique 
  userWords User_Word[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
  isDeleted Boolean  @default(false)
  @@index([word], name: "word_unique", type: Hash)
}

model Meaning {
  id        Int      @id @default(autoincrement())
  meaning   String
  userWordId Int
  userWord  User_Word @relation(fields: [userWordId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
  isDeleted Boolean  @default(false)
}

model Sentence {
  id        Int     @id @default(autoincrement())
  sentence  String 
  userWordId Int
  userWord  User_Word @relation(fields: [userWordId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
  isDeleted Boolean  @default(false)
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  userWords User_Word[]
  profile   User_Profile[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
  isDeleted Boolean  @default(false)
}

model User_Profile {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  firstName String
  lastName  String
  iconUrl   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
  isDeleted Boolean  @default(false)
}

model User_Word {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  wordId    Int
  word      Word     @relation(fields: [wordId], references: [id])
  meanings  Meaning[]
  sentences Sentence[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?
  isDeleted Boolean  @default(false)
}